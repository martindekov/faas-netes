functionNamespace:

async: true

exposeServices: true
serviceType: NodePort
rbac: true
securityContext: true
basic_auth: false

faasnetesd:
  image: openfaas/faas-netes:0.5.7
  readTimeout : "20s"
  writeTimeout : "20s"
  imagePullPolicy : "Always"    # Image pull policy for deployed functions

gateway:
  image: openfaas/gateway:0.8.4
  readTimeout : "20s"
  writeTimeout : "20s"
  upstreamTimeout : "15s"  # Must be smaller than read/write_timeout
  replicas: 1

queueWorker:
  image: openfaas/queue-worker:0.4.8
  ackWait : "30s"
  replicas: 1

# image pull policy for openfaas components, can change to `IfNotPresent` in offline env
openfaasImagePullPolicy: "Always"

# replaces faas-netes with openfaas-operator
operator:
  image: functions/openfaas-operator:0.8.0
  create: false

# monitoring and auto-scaling components
prometheus:
  image: prom/prometheus:v2.3.1
alertmanager:
  image: prom/alertmanager:v0.15.0

# async provider
nats:
  image: nats-streaming:0.6.0

# ingress configuration
ingress:
  enabled: false
  # Used to create Ingress record (should be used with exposeServices: false).
  hosts:
    - host: faas-netes.openfaas.local
      serviceName: faas-netes
      servicePort: 8080
      path: /
    - host: gateway.openfaas.local
      serviceName: gateway
      servicePort: 8080
      path: /
    - host: prometheus.openfaas.local
      serviceName: prometheus
      servicePort: 9090
      path: /
    - host: alertmanager.openfaas.local
      serviceName: alertmanager
      servicePort: 9093
      path: /
  annotations:
    kubernetes.io/ingress.class: nginx
  tls:
    # Secrets must be manually created in the namespace.


